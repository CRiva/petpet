{"version":3,"sources":["happy.png","foodBowl.png","washtub.png","poop.png","bathSound.mp3","eatSound.mp3","lol.mp3","pickPoop.mp3","sad.png","netural.png","components/StatusBar.js","components/StatusHeader.js","components/Pet.js","components/ActionBar.js","helpers/useInterval.js","components/PoopArea.js","components/HiddenArea.js","containers/Game.js","stores/StatusStore.js","stores/PoopStore.js","containers/App.js","stores/GameStore.js","serviceWorker.js","index.js"],"names":["module","exports","StatusBar","color","percentage","label","ProgressBar","variant","now","StatusHeader","gameStore","useObserver","hunger","name","happiness","dirtiness","Pet","petPet","image","Row","className","Col","xs","span","offset","md","Image","onClick","src","alt","ActionBar","feedPet","cleanPet","foodBowl","washTub","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","PoopArea","props","children","HiddenArea","poop","bathSound","eatSound","laughSound","pickPoopSound","inject","height","document","getElementById","clientHeight","width","clientWidth","poopStore","updatePoopArea","poopArea","play","updateAttribute","poops","removeChild","lastChild","isHungry","updateAttributes","createPoop","hasChildNodes","i","setTimeout","window","clearTimeout","cancelAnimationFrame","clearAll","end","querySelector","cloneNode","restart","style","display","onclick","location","reload","appendChild","StatusStore","attributes","this","observable","PoopStore","action","x","Math","floor","random","y","left","top","removePoop","stores","bound","hungerRate","happinessRate","dirtinessRate","isDirty","happyFace","checkDirtiness","reaction","checkHunger","checkHappiness","sadFace","neturalFace","attribute","amount","App","Container","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e0963146.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/happy.55db9858.png\";","module.exports = __webpack_public_path__ + \"static/media/foodBowl.ca70f5f6.png\";","module.exports = __webpack_public_path__ + \"static/media/washtub.064675d7.png\";","module.exports = __webpack_public_path__ + \"static/media/poop.d9686bac.png\";","module.exports = __webpack_public_path__ + \"static/media/bathSound.b2041793.mp3\";","module.exports = __webpack_public_path__ + \"static/media/eatSound.e036d31d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/lol.1f8bb200.mp3\";","module.exports = __webpack_public_path__ + \"static/media/pickPoop.4c0696ef.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sad.eec99f7b.png\";","module.exports = __webpack_public_path__ + \"static/media/netural.bee15c3a.png\";","import React from 'react';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\n\nconst StatusBar = ({ color, percentage, label }) => {\n  return(\n    <div>\n      <ProgressBar variant={color} now={percentage} label={label} />\n    </div>\n  )\n}\n\nexport default StatusBar;\n","import React from 'react';\nimport { useObserver } from 'mobx-react';\nimport StatusBar from './StatusBar';\n\nconst StatusHeader = ({ gameStore }) => {\n  return useObserver(() => (\n    <div>\n      <StatusBar\n        color={gameStore.hunger.color}\n        percentage={gameStore.hunger.percentage}\n        label={`${gameStore.hunger.name}: ${gameStore.hunger.percentage}`}\n      />\n      <br />\n      <StatusBar\n        color={gameStore.happiness.color}\n        percentage={gameStore.happiness.percentage}\n        label={`${gameStore.happiness.name}: ${gameStore.happiness.percentage}`}\n      />\n      <br />\n      <StatusBar\n        color={gameStore.dirtiness.color}\n        percentage={gameStore.dirtiness.percentage}\n        label={`${gameStore.dirtiness.name}: ${gameStore.dirtiness.percentage}`}\n      />\n    </div>\n  ));\n}\n\nexport default StatusHeader;\n","import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\n\n\nconst Pet = ({ petPet, image }) => {\n  return(\n    <Row className='justify-content-xs-center'>\n      <Col xs={{ span: 8, offset: 2}} md={{ span: 6, offset: 3}}>\n        <Image onClick={petPet} src={image} alt='Pet' />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Pet;\n","import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image'\n\nimport foodBowl from '../foodBowl.png';\nimport washTub from '../washtub.png';\n\nconst ActionBar = ({ feedPet, cleanPet }) => {\n\n  return(\n    <Row className='justify-content-md-center'>\n      <Col md={3} xs={6}>\n        <Image\n          onClick={feedPet}\n          alt='Food Bowl'\n          src={foodBowl}\n          className=\"align-self-center\"\n        />\n      </Col>\n      <Col md={{ span: 3, offset: 6 }} xs={6} >\n        <Image\n          onClick={cleanPet}\n          alt='Wash Tub'\n          src={washTub}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default ActionBar;\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React from 'react';\n\nconst PoopArea = (props) => {\n  return(\n    <div id=\"poop-area\">\n      {props.children}\n    </div>\n  )\n}\n\nexport default PoopArea;\n","import React from 'react';\n\n\nimport poop from '../poop.png';\nimport bathSound from '../bathSound.mp3'\nimport eatSound from '../eatSound.mp3'\nimport laughSound from '../lol.mp3'\nimport pickPoopSound from '../pickPoop.mp3'\n\nconst HiddenArea = (props) => {\n  return(\n    <div>\n      <img src={poop} className=\"poop\" id =\"hiddenPoop\" alt=\"Poop\"/>\n      <div className=\"gameOver\">\n        <h2>Your pet died from being burried in it's own crap... Are you sure you're ready to be a pet owner?</h2>\n        <h4>Click the poop to restart (maybe that will teach you how to cleanup after your pet.)</h4>\n      </div>\n      <audio id=\"bathSound\">\n          <source src={bathSound}></source>\n      </audio>\n      <audio id=\"eatSound\">\n          <source src={eatSound}></source>\n      </audio>\n      <audio id=\"laughSound\">\n          <source src={laughSound}></source>\n      </audio>\n      <audio id=\"pickPoopSound\">\n          <source src={pickPoopSound}></source>\n      </audio>\n    </div>\n  )\n}\n\nexport default HiddenArea;\n","import React, { useEffect } from 'react';\nimport { inject, useObserver } from 'mobx-react';\n\nimport './Game.css';\nimport StatusHeader from '../components/StatusHeader';\nimport Pet from '../components/Pet';\nimport ActionBar from '../components/ActionBar';\nimport { useInterval } from '../helpers/useInterval';\nimport PoopArea from '../components/PoopArea';\nimport HiddenArea from '../components/HiddenArea';\n\n\n\nconst Game = ({ gameStore }) => {\n  useEffect(() => {\n    const height = document.getElementById('poop-area').clientHeight;\n    const width = document.getElementById('poop-area').clientWidth;\n    gameStore.poopStore.updatePoopArea(height, width);\n    gameStore.poopStore.poopArea = document.getElementById('poop-area');\n  }, [])\n\n  const feedPet = () => {\n    document.getElementById('eatSound').play();\n    gameStore.updateAttribute(gameStore.hunger, -15);\n    gameStore.updateAttribute(gameStore.happiness, +10);\n  };\n  const cleanPet = () => {\n    document.getElementById('bathSound').play();\n    while (gameStore.poopStore.poops>0) {\n\n      gameStore.poopStore.poopArea.removeChild(gameStore.poopStore.poopArea.lastChild);\n      gameStore.poopStore.poops -=1;\n  }\n    gameStore.dirtiness.percentage = 0;\n    if (gameStore.isHungry){\n      gameStore.updateAttribute(gameStore.happiness, +50);\n    }else{\n      gameStore.updateAttribute(gameStore.happiness, +100);\n    }\n    \n  };\n  const petPet = () => {\n    document.getElementById('laughSound').play();\n    gameStore.updateAttribute(gameStore.happiness, 5);\n  };\n\n\n  useInterval(() => {\n    gameStore.updateAttributes();\n  }, 1000);\n\n\n  useInterval(() => {\n    gameStore.poopStore.createPoop();\n  }, 3000);\n\n\n   const clearAll = (()=> {\n    for (var i = setTimeout(function() {}, 0); i > 0; i--) {\n      window.clearInterval(i);\n      window.clearTimeout(i);\n      if (window.cancelAnimationFrame) window.cancelAnimationFrame(i);\n    }\n  });\n\n  useInterval(() => {\n    if(gameStore.poopStore.poops > 5){\n      while (gameStore.poopStore.poopArea.hasChildNodes()) {\n        gameStore.poopStore.poopArea.removeChild(gameStore.poopStore.poopArea.lastChild);\n      }\n      clearAll();\n      const end = document.querySelector('.gameOver').cloneNode(true);\n      const restart = document.getElementById('hiddenPoop').cloneNode(true);\n      restart.style.display = 'block';\n      restart.onclick = () =>{\n        window.location.reload(); \n      };\n      end.style.display = 'block';\n      gameStore.poopStore.poopArea.appendChild(end);\n      gameStore.poopStore.poopArea.appendChild(restart);\n    }\n  }, 6000);\n\n  \n\n  return useObserver(() => (\n    <div>\n      <HiddenArea />\n      <PoopArea>\n        <StatusHeader gameStore={gameStore} />\n        \n        <Pet petPet={petPet} image={gameStore.image} />\n        \n        <ActionBar feedPet={feedPet} cleanPet={cleanPet} />\n      </PoopArea>\n    </div>\n  ));\n}\n\nexport default inject('gameStore')(Game);\n","import { observable } from \"mobx\";\n\nexport default class StatusStore {\n  @observable name;\n  @observable color;\n  @observable percentage;\n  \n  constructor(attributes = {}) {\n    const {\n      name,\n      percentage,\n      color\n    } = attributes;\n    this.name = name || 'status';\n    this.percentage = percentage;\n    this.color = color || 'success';\n  }\n}\n","import { observable, action } from \"mobx\";\n\nexport default class PoopStore {\n  @observable height;\n  @observable width;\n  @observable poops;\n  @observable poopArea;\n\n  constructor(attributes = {}) {\n    const {\n      height,\n      width,\n      poopArea\n    } = attributes;\n    this.height = height;\n    this.width = width;\n    this.poops = 0;\n    this.poopArea = poopArea;\n\n  }\n\n  @action\n  updatePoopArea = (height, width) => {\n    this.height = height;\n    this.width = width;\n  }\n\n  @action\n  removePoop = (poop) => {\n    this.poopArea.removeChild(poop);\n    this.poops = this.poops - 1;\n  }\n  \n  @action\n   createPoop = () => {\n    const x = Math.floor(Math.random() * this.width);\n    const y = Math.floor(Math.random() *  this.height);\n    const poop = document.getElementById('hiddenPoop').cloneNode(true);\n\n    poop.style.width = '50px';\n    poop.style.height = '50px';\n    poop.style.left = `${x}px`;\n    poop.style.top = `${y}px`;\n    poop.style.display = 'block';\n    poop.onclick = () => {\n      this.removePoop(poop);\n      document.getElementById('pickPoopSound').play();\n    }\n    this.poops = this.poops + 1;\n    this.poopArea.appendChild(poop);\n  }\n}\n","import React from 'react';\nimport { Provider } from 'mobx-react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n\nimport './App.css';\nimport Game from './Game';\nimport gameStore from '../stores/GameStore';\n\nconst stores = { gameStore };\n\nconst App = () => {\n  return (\n    <Provider {...stores}>\n      <Container className='App-Container' >\n        <Row>\n          <Col xs={12}>\n            <Game />\n          </Col>\n        </Row>\n      </Container>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { action, observable, reaction } from \"mobx\";\nimport StatusStore from './StatusStore';\n\nimport PoopStore from './PoopStore';\nimport sadFace from '../sad.png';\nimport neturalFace from '../netural.png';\nimport happyFace from '../happy.png';\n\nexport class GameStore {\n  @observable hunger;\n  @observable happiness;\n  @observable dirtiness;\n  @observable image;\n  @observable poopStore;\n\n  hungerRate = 5;\n  happinessRate = -2;\n  dirtinessRate = 3;\n\n  isHungry = false;\n  isDirty = false;\n  \n  constructor(attributes = {}) {\n    const {\n      hunger,\n      happiness,\n      dirtiness\n    } = attributes;\n    this.hunger = hunger || new StatusStore({ name: 'Hunger', percentage: 0, color: 'danger' });\n    this.happiness = happiness || new StatusStore({ name: 'Happiness', percentage: 100, color: 'success' });\n    this.dirtiness = dirtiness || new StatusStore({ name: 'Dirtiness', percentage: 0, color: 'secondary' });\n    this.poopStore = new PoopStore();\n    this.image = happyFace;\n    this.checkDirtiness();\n\n    reaction(\n      () => this.hunger.percentage,\n      () => this.checkHunger()\n    );\n    reaction(\n      () => this.poopStore.poops,\n      () => this.checkDirtiness()\n    );\n    reaction(\n      () => this.happiness.percentage,\n      () => this.checkHappiness()\n    );\n  }\n\n  @action\n  checkHunger = () => {\n    if (this.hunger.percentage === 100 && !this.isHungry){\n      this.happinessRate = this.happinessRate + -(this.hungerRate)\n      this.isHungry = true;\n    } else if (this.hunger.percentage < 100 && this.isHungry) {\n      this.happinessRate = this.happinessRate + this.hungerRate;\n      this.isHungry = false;\n    }\n  };\n\n  @action\n  checkDirtiness = () => {\n    this.dirtinessRate = this.poopStore.poops;\n    if (this.dirtiness.percentage === 100 && !this.isDirty){\n      this.happinessRate = this.happinessRate + -(this.dirtinessRate)\n      this.isDirty = true;\n    } else if (this.dirtiness.percentage < 100 && this.isDirty) {\n      this.happinessRate = this.happinessRate + this.dirtinessRate;\n      this.isDirty = false;\n    }\n  };\n\n  @action\n  checkHappiness = () => {\n    if (this.happiness.percentage <= 30 ){\n      this.image = sadFace;\n    } else if (this.happiness.percentage > 60) {\n      this.image = happyFace;\n    } else{\n      this.image = neturalFace;\n    }\n  };\n\n  @action.bound\n  updateAttributes = () => {\n    this.updateAttribute(this.hunger, this.hungerRate);\n    this.updateAttribute(this.happiness, this.happinessRate);\n    this.updateAttribute(this.dirtiness, this.dirtinessRate);\n  }\n\n  @action\n  updateAttribute = (attribute, amount) => {\n    if (attribute.percentage + amount >= 100) {\n      attribute.percentage = 100;\n    } else if (attribute.percentage + amount <= 0) {\n      attribute.percentage = 0\n    } else {\n      attribute.percentage = attribute.percentage + amount;\n    }\n  }\n}\n\nexport default new GameStore();\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}